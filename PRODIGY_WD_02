<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Tic-Tac-Toe</title>
  <style>
    body {
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      background: #f7f7f7;
      font-family: Arial, sans-serif;
    }
    .game-container {
      text-align: center;
    }
    h1 {
      margin-bottom: 20px;
      color: #333;
    }
    .board {
      display: grid;
      grid-template-columns: repeat(3, 100px);
      grid-template-rows: repeat(3, 100px);
      gap: 5px;
      margin-bottom: 20px;
    }
    .cell {
      width: 100px;
      height: 100px;
      display: flex;
      justify-content: center;
      align-items: center;
      background: #fff;
      border: 2px solid #333;
      font-size: 2rem;
      cursor: pointer;
    }
    .cell.taken {
      cursor: not-allowed;
    }
    .status {
      margin: 10px 0;
      font-size: 1.2rem;
      font-weight: bold;
      color: #444;
    }
    button {
      padding: 10px 20px;
      font-size: 1rem;
      cursor: pointer;
      background: #4CAF50;
      color: white;
      border: none;
      border-radius: 5px;
    }
    button:hover {
      background: #45a049;
    }
  </style>
</head>
<body>
  <div class="game-container">
    <h1>Tic-Tac-Toe</h1>
    <div class="board" id="board"></div>
    <div class="status" id="status">Player X's turn</div>
    <button onclick="resetGame()">Restart</button>
    <br><br>
    <button onclick="toggleAI()">Play vs AI: <span id="ai-status">OFF</span></button>
  </div>

  <script>
    const boardElement = document.getElementById("board");
    const statusElement = document.getElementById("status");
    const aiStatusElement = document.getElementById("ai-status");
    
    let board = ["", "", "", "", "", "", "", "", ""];
    let currentPlayer = "X";
    let gameActive = true;
    let playWithAI = false;

    const winningConditions = [
      [0,1,2], [3,4,5], [6,7,8], // rows
      [0,3,6], [1,4,7], [2,5,8], // cols
      [0,4,8], [2,4,6]           // diagonals
    ];

    function createBoard() {
      boardElement.innerHTML = "";
      board.forEach((cell, index) => {
        const cellElement = document.createElement("div");
        cellElement.classList.add("cell");
        if (cell) {
          cellElement.textContent = cell;
          cellElement.classList.add("taken");
        }
        cellElement.addEventListener("click", () => handleCellClick(index));
        boardElement.appendChild(cellElement);
      });
    }

    function handleCellClick(index) {
      if (board[index] !== "" || !gameActive) return;
      
      board[index] = currentPlayer;
      createBoard();
      checkResult();

      if (gameActive) {
        currentPlayer = currentPlayer === "X" ? "O" : "X";
        statusElement.textContent = `Player ${currentPlayer}'s turn`;
        
        if (playWithAI && currentPlayer === "O") {
          setTimeout(aiMove, 500);
        }
      }
    }

    function checkResult() {
      let roundWon = false;
      for (let condition of winningConditions) {
        const [a, b, c] = condition;
        if (board[a] && board[a] === board[b] && board[a] === board[c]) {
          roundWon = true;
          break;
        }
      }

      if (roundWon) {
        statusElement.textContent = `Player ${currentPlayer} Wins! 🎉`;
        gameActive = false;
        return;
      }

      if (!board.includes("")) {
        statusElement.textContent = "It's a Draw! 🤝";
        gameActive = false;
        return;
      }
    }

    function resetGame() {
      board = ["", "", "", "", "", "", "", "", ""];
      currentPlayer = "X";
      gameActive = true;
      statusElement.textContent = "Player X's turn";
      createBoard();
    }

    function toggleAI() {
      playWithAI = !playWithAI;
      aiStatusElement.textContent = playWithAI ? "ON" : "OFF";
      resetGame();
    }

    function aiMove() {
      // Simple AI: choose random empty cell
      let availableCells = board.map((val, i) => val === "" ? i : null).filter(v => v !== null);
      if (availableCells.length > 0) {
        let randomIndex = availableCells[Math.floor(Math.random() * availableCells.length)];
        board[randomIndex] = "O";
        createBoard();
        checkResult();
        if (gameActive) {
          currentPlayer = "X";
          statusElement.textContent = "Player X's turn";
        }
      }
    }

    createBoard();
  </script>
</body>
</html>
